#load "graphics.cma";;
open Graphics;;
open Sys;;

(* 0: mur, 1: sol, 2: pacgum, 3: pacgum bonus *)
let carte = [|[|0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0|];
					[|0;2;2;2;2;2;2;2;2;2;2;2;2;0;0;2;2;2;2;2;2;2;2;2;2;2;2;0|];
					[|0;2;0;0;0;0;2;0;0;0;0;0;2;0;0;2;0;0;0;0;0;2;0;0;0;0;2;0|];
					[|0;3;0;0;0;0;2;0;0;0;0;0;2;0;0;2;0;0;0;0;0;2;0;0;0;0;3;0|];
					[|0;2;0;0;0;0;2;0;0;0;0;0;2;0;0;2;0;0;0;0;0;2;0;0;0;0;2;0|];
					[|0;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;0|];
					[|0;2;0;0;0;0;2;0;0;2;0;0;0;0;0;0;0;0;2;0;0;2;0;0;0;0;2;0|];
					[|0;2;0;0;0;0;2;0;0;2;0;0;0;0;0;0;0;0;2;0;0;2;0;0;0;0;2;0|];
					[|0;2;2;2;2;2;2;0;0;2;2;2;2;0;0;2;2;2;2;0;0;2;2;2;2;2;2;0|];
					[|0;0;0;0;0;0;2;0;0;0;0;0;2;0;0;2;0;0;0;0;0;2;0;0;0;0;0;0|];
					[|0;0;0;0;0;0;2;0;0;0;0;0;2;0;0;2;0;0;0;0;0;2;0;0;0;0;0;0|];
					[|0;0;0;0;0;0;2;0;0;2;2;2;2;2;2;2;2;2;2;0;0;2;0;0;0;0;0;0|];
					[|0;0;0;0;0;0;2;0;0;2;0;0;0;0;0;0;0;0;2;0;0;2;0;0;0;0;0;0|];
					[|0;0;0;0;0;0;2;0;0;2;0;0;0;0;0;0;0;0;2;0;0;2;0;0;0;0;0;0|];
					[|1;1;1;1;1;1;2;2;2;2;0;0;0;0;0;0;0;0;2;2;2;2;1;1;1;1;1;1|];
					[|0;0;0;0;0;0;2;0;0;2;0;0;0;0;0;0;0;0;2;0;0;2;0;0;0;0;0;0|];
					[|0;0;0;0;0;0;2;0;0;2;0;0;0;0;0;0;0;0;2;0;0;2;0;0;0;0;0;0|];
					[|0;0;0;0;0;0;2;0;0;2;2;2;2;2;2;2;2;2;2;0;0;2;0;0;0;0;0;0|];
					[|0;0;0;0;0;0;2;0;0;2;0;0;0;0;0;0;0;0;2;0;0;2;0;0;0;0;0;0|];
					[|0;0;0;0;0;0;2;0;0;2;0;0;0;0;0;0;0;0;2;0;0;2;0;0;0;0;0;0|];
					[|0;2;2;2;2;2;2;2;2;2;2;2;2;0;0;2;2;2;2;2;2;2;2;2;2;2;2;0|];
					[|0;2;0;0;0;0;2;0;0;0;0;0;2;0;0;2;0;0;0;0;0;2;0;0;0;0;2;0|];
					[|0;3;0;0;0;0;2;0;0;0;0;0;2;0;0;2;0;0;0;0;0;2;0;0;0;0;3;0|];
					[|0;2;2;2;0;0;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;0;0;2;2;2;0|];
					[|0;0;0;2;0;0;2;0;0;2;0;0;0;0;0;0;0;0;2;0;0;2;0;0;2;0;0;0|];
					[|0;0;0;2;0;0;2;0;0;2;0;0;0;0;0;0;0;0;2;0;0;2;0;0;2;0;0;0|];
					[|0;2;2;2;2;2;2;0;0;2;2;2;2;0;0;2;2;2;2;0;0;2;2;2;2;2;2;0|];
					[|0;2;0;0;0;0;0;0;0;0;0;0;2;0;0;2;0;0;0;0;0;0;0;0;0;0;2;0|];
					[|0;2;0;0;0;0;0;0;0;0;0;0;2;0;0;2;0;0;0;0;0;0;0;0;0;0;2;0|];
					[|0;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;2;0|];
					[|0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0;0|]|];;

let faireAvancerJoueur posx posy jx jy mousex mousey vitesse = 
	let x = mousex - jx and y = mousey - jy in
	let norme = sqrt ((float_of_int x)**2. +. (float_of_int y)**2.) in
	let vectx = int_of_float ((float_of_int (x*vitesse))/.norme) and
		vecty = int_of_float ((float_of_int (y*vitesse))/.norme) in
	
	set_color (rgb 100 100 100);
	fill_rect 0 0 (2*jx) (2*jy);
	
	posx := !posx + vectx;
	posy := !posy + vecty;
	set_color (rgb 250 80 40);
	fill_circle (jx + 3*vectx) (jy + 3*vecty) 15;;

let afficherCarte () = 
	for i=0 to 30 do
		let t = carte.(i) in
		for j=0 to 27 do
			if t.(j) = 0 then begin set_color (black); fill_rect (20*j) (100+20*(30-i)) 20 20; end
				else begin set_color (white); fill_rect (20*j-2) (98+20*(30-i)) 24 24; end;
			if t.(j) = 2 then begin set_color (red); fill_rect (20*j+6) (108+20*(30-i)) 6 6; end;
			if t.(j) = 3 then begin set_color (red); fill_rect (20*j+2) (104+20*(30-i)) 14 14; end;
		done;
	done;; (* Faire disjonction pour afficher les blanches sur plus d'espace *)

let jeu =
	open_graph " 560x720";
	set_window_title "Test";
	let framerate = 0.017 and
	tempsProgramme = ref (time()) and
	tailleMenu = 100 and
	posx = ref (size_x()/2) and
	posy = ref ((size_y()-100)/2) in
	
	set_color (rgb 100 100 100);
	fill_rect 0 0 (size_x()) tailleMenu;
	afficherCarte();
	
	while !posx < size_x() && !posx > 0 && !posy > tailleMenu && !posy < size_y() do
	
		while time() -. !tempsProgramme < framerate do
			posy := !posy;
		done;

		(*set_color(white);
		fill_rect !posx !posy 10 10;*)
		
		let (mx,my) = mouse_pos() in
		faireAvancerJoueur posx posy (tailleMenu/2) (tailleMenu/2) mx my 1;
		
		set_color(rgb 255 255 0);
		fill_rect !posx !posy 10 10;
		tempsProgramme := (time());
	done;;